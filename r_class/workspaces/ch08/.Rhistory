x<-sample(15,15,replace=FALSE)
x
help(sort)
order(x)
help(reverse)
??reverse
help(rev)
rev(x)
??rev
dump(rev)
dump(rev(x))
help(dump)
help
rev
help rev
help base::rev
help(base::rev)
help(dput)
help()
help(rev)
help(seq)
help(sort)
x
rev(x)
order(x)
y<-x[order(x)]
y
help(index)
??index
y<-x[length(x)-order(x)]
y
y<-x[abs(length(x)-x))]
y<-x[abs(length(x)-x)]
y
x
sort(order(x))
order(x)
ls()
x
y
rm(y)
ls()
x[-length(x)]
x[]
-x[]
order(x)
x[order(x)]
help(order)
reorder
help(reorder)
??
?
??help
??utils::help
??base
x
order(x)
order(order(x))
order(-order(x))
z=c(3,7,33)
order(-order(z))
z[order(-order(z))]
x[order(-order(x))]
x
x[order(-order(x))]
z=c(3,7,33,95,2)
z[order(-order(z))]
ls()
x
z
rm(z)
y<-seq(length(x):1)
y
y<-seq(length(x):1,by=-1)
y<-seq(length(x):1,by=1)
y
15:1
y<-length(x):1
y
x
y
z[y]=x
z<-x[y]
z
x
w<-x[length(x):1]
w
x
my.cos = function(angle, degrees=FALSE) angle*2
my.cos(33,TRUE)
my.cos(33)
my.cos
my.cos = function(angle, degrees=FALSE) if (NaN != angle) 2*angle
my.cos(33)
my.cos()
my.cos = function(angle, degrees=FALSE) ifelse(angle != NaN,2*angle,NaN)
my.cos()
my.cos(33)
isNumber(a)
33 > 0
33 == NaN
33 != NaN
??is
??is.
my.cos = function(angle, degrees=FALSE) ifelse(is.na(angle),2*angle,NaN)
my.cos(33)
my.cos()
my.cos = function(angle, degrees=FALSE) ifelse(is.na(angle),NaN,2*angle)
my.cos()
my.cos(33)
my.cos = function(angle=Nan, degrees=FALSE) ifelse(is.na(angle),NaN,2*angle)
my.cos(33)
my.cos()
my.cos = function(angle=NaN, degrees=FALSE) ifelse(is.na(angle),NaN,2*angle)
my.cos()
my.cos(33)
cos(pi/2)
cos(90)
cos(pi/2*180/pi)
my.cos = function(angle=NaN, degrees=FALSE) ifelse(is.na(angle),NaN,ifelse(degrees,cos(angle),cos(180/pi*angle))
}
my.cos = function(angle=NaN, degrees=FALSE) ifelse(is.na(angle),NaN,ifelse(degrees,cos(angle),cos(180/pi*angle)))
my.cos(90,TRUE)
my.cos(pi/2)
8^(-1/3)
8^(1/3)
-8^1/3
cube.root = function() x^1/3
cube.root(8)
cube.root = function(x) x^1/3
cube.root(8)
cube.root = function(x) x^(1/3)
cube.root(8)
cube.root(-8)
cube.root = function(x) (x)^(1/3)
cube.root(-8)
as.numeric(-8)
cube.root(as.numeric(-8))
cube.root = function(x) (as.numeric(x))^(1/3)
cube.root(-8)
cube.root = function(x) as.numeric(x)^(1/3)
cube.root(-8)
cube.root = function(x) as.numeric(x^(1/3))
cube.root(-8)
cube.root = function(x) (0+x)^(1/3)
cube.root(-8)
cube.root(8)
cube.root = function(x) is.numeric(x)
cube.root(8)
cube.root(-8)
cube.root(c(-8,8))
cube.root(c(-8,8,"a"))
q()
ls()
cube.root
ls(cube.root)
cube.root()
function
cube.root
cube.root
cube.root()
cube.root(
)
cube.root
?cube.root
??cube.root
getAnywhere(cube.root)
GlobalEnv.cube.root
GlobalEnv::cube.root
??GlobalEnv
help(getMethod)
getMethod("cube.root",numeric)
getMethod("cube.root","numeric")
getMethod(cube.root,numeric)
getMethod('cube.root')
getMethod('cube.root',TRUE)
getMethod('cube.root',FALSE)
help(getMethod)
getMethod('cube.root',signature=integer())
getMethod('cube.root',signature=numeric())
help(root)
help(cube)
??root
cube.root <- function(x) { (x)^(1/3) }
cube.root(-8)
cube.root(8)
cube.root <- function(x) { (as.numeric(x))^(1/3) }
cube.root(8)
cube.root(-8)
cube.root <- function(x) as.numeric(x)
cube.root(-8)
cube.root <- function(x) as.numeric(x) 
cube.root <- function(x) as.numeric(x)+3 
cube.root(-8)
cube.root <- function(x) as.numeric(x+3)
cube.root(-8)
cube.root <- function(x) as.numeric(x^2)
cube.root(-8)
cube.root <- function(x) as.numeric(x^(1/3))
cube.root(-8)
help(as.numeric)
as.numeric(factor(5:10))
factor(5:10)
as.double(factor(5:10))
help(as.numeric)
f<-factors(5:10)
f<-factor(5:10)
f
levels(f)[f]
cube.root <- function(x) as.numeric(levels(x)[x])^(1/3)
cube.root(8)
cube.root(-8)
cube.root(c(-8,8))
cube.root <- function(x) (levels(x)[x])^(1/3)
cube.root(c(-8,8))
cube.root <- function(x) levels(x)[x]
cube.root(c(-8,8))
cube.root(c(8,8))
help(as.numeric)
cube.root <- function(x) as.numeric(levels(x))[x]
cube.root(c(8,8))
f
help(levels)
cube.root <- function(x) { f<-levels(x); as.numeric(f)[x];}
cube.root(c(8,8))
cube.root <- function(x) { f<-levels(x); as.numeric(f)[f];}
cube.root(c(8,8))
ls()
dump(f)
f
<cube.root
<-cube.root
cube.root
my.cos
mode(cube.root)
cube.root <- function(x) { x ^ (1/3) }
cube.root(8)
cube.root(-8)
cube.root <- function(x) { (as.numeric(x)) ^ (1/3) }
cube.root(-8)
cube.root(8)
cube.root <- function(x) { (as.double(x)) ^ (1/3) }
cube.root(8)
cube.root(-8)
cube.root <- function(x) { y<-as.numeric(x); y ^ (1/3) }
cube.root(-8)
cube.root(8)
cube.root <- function(x=0) { x ^ (1/3) }
cube.root(8)
cube.root(-8)
cube.root
x<-8
x^(1/3)
cube.root <- function(x) { ifelse(x>=0,x^(1/3),"+/-" (abs(x))^(1/3) }
cube.root <- function(x) { ifelse(x>=0,x^(1/3),"+/-" (abs(x))^(1/3)) }
cube.root(8)
cube.root(-8)
cube.root <- function(x) { ifelse(x>=0,x^(1/3), c((abs(x))^(1/3)),-3) }
cube.root(-8)
cube.root <- function(x) { ifelse(x>=0 ,x^(1/3) , c(-3,3) }
cube.root <- function(x) { ifelse(x>=0 ,x^(1/3) , c(-3,3)) }
cube.root(-8)
cube.root <- function(x) { ifelse(x>=0 ,x^(1/3) , return c(-3,3)) }
abs(-8)
cube.root <- function(x) { y<-(abs(x))^(1/3); y}
abs(-8
cube.root(-8)
cube.root(8)
cube.root <- function(x) { y<-(abs(x))^(1/3); return c(y,y)}
cube.root <- function(x) { y<-(abs(x))^(1/3); z<-c(y,y); return z }
cube.root <- function(x) { y<-(abs(x))^(1/3); z<-c(y,y); return z; }
cube.root <- function(x) { y<-(abs(x))^(1/3)
z<-c(y,y)
return z
}
cube.root <- function(x) { y<-(abs(x))^(1/3); z<-c(y,y); return (z); }
cube.root(8)
cube.root(-8)
cube.root <- function(x) { y<-(abs(x))^(1/3); ifelse(x>=0,y,(c(-y,y))); }
cube.root(8)
cube.root(-8)
cube.root <- function(x) { y<-(abs(x))^(1/3); ifelse(x>=0,z<-y,z<-(c(-y,y))); return(z) }
cube.root(8)
cube.root(-8)
cube.root(c(-8,8,729,1000000))
cube.root <- function(x) { y<-(abs(x))^(1/3); ifelse(x>=0,y,-y) ; }
cube.root(c(-8,8,729,1000000))
cube.root <- function(x) { yifelse(x>=0,x^(1/3),-abs(x)^(1/3)) ; }
cube.root(c(-8,8,729,1000000))
-8^(1/3)
??amort
install(FinancialMath)
install.packages(FinancialMath)
install.packages("FinancialMath")
help(amort.table)
library(FinancialMath)
??amort.table
help(amort.table)
ls -al
amort.table(Loan<-13000,n=5,pmt=NULL,i=.005,pf<-12,plot=FALSE)
amort.table(Loan<-13000,n=5,pmt=NA,i=.005,pf<-12,plot=FALSE)
amort.table(Loan<-13000,n=12,pmt=NA,i=.005,pf<-5,plot=FALSE)
amort.table(Loan<-13000,n=60,pmt=NA,i=.005,pf<-5,plot=FALSE)
options(scipen=1000)
amort.table(Loan<-13000,n=60,pmt=NA,i=.005,pf<-5,plot=FALSE)
amort.table(Loan<-13000,n=60,pmt=NA,i=.06,pf<-5,plot=FALSE)
amort.table(Loan<-13000,n=60,pmt=NA,i=.06/12,pf<-5,plot=FALSE)
amort.table(Loan<-13000,n=60,pmt=NA,i=.12/12,pf<-5,plot=FALSE)
amort.table(Loan<-18000,n=60,pmt=NA,i=.12/12,pf<-5,plot=FALSE)
amort.table(Loan<-14000,n=60,pmt=280,i=NA,pf<-5,plot=FALSE)
amort.table(Loan<-NA,n=60,pmt=280,i=.12/12,pf<-5,plot=FALSE)
amort.table(Loan<-13000,n=60,pmt=NA,i=.12/12,pf<-5,plot=FALSE)
amort.table(Loan<-13000,n=60,pmt=NA,i=.12,pf<-5,plot=FALSE)
amort.table(Loan<-13000,n=60,pmt=NA,i=.12/12,pf<-5,plot=FALSE)
amort.table(Loan<-17000,n=60,pmt=NA,i=.12/12,pf<-5,plot=FALSE)
amort.table(Loan<-18000,n=60,pmt=NA,i=.12/12,pf<-5,plot=FALSE)
amort.table(Loan<-17000,n=60,pmt=NA,i=.12/12,pf<-5,plot=FALSE)
amort.table(Loan<-13000,n=60,pmt=NA,i=.12/12,pf<-5,plot=FALSE)
amort.table(Loan<-13000,n=60,pmt=NA,i=.08/12,pf<-5,plot=FALSE)
amort.table(Loan<-13000,n=60,pmt=NA,i=.08/12,pf<-5,plot=TRUE)
amort.table(Loan<-13000,n=60,pmt=NA,i=.08/12,pf<-5,plot=FALSE)
q
ls()
help(cummin)
help(pmin)
x
y
pmin(y,3)
pmin(3,y)
y
help(rank)
rank(y)
z
rank(z)
order(z)
sort(z)
rm(list=ls())
ls()
x<-sample(100,15,replace=FALSE)
x
sort(x)
sort(x)[4:5]
tmean = function (x,k) { sort(x)[k+1:length(x)-k] }
tmean(x,2)
tmean = function (x,k) { y<-sort(x); y[k+1:length(x)-k] }
tmean(x,2)
tmean = function (x,k) { y<-sort(x); nf<-k+1; nt<-length[x]-k; return y[nf:nt] }
tmean = function (x,k) { y<-sort(x); nf<-k+1; nt<-length[x]-k; return y[nf:nt]; }
tmean = function (x,k) { y<-sort(x); nf<-k+1; nt<-length[x]-k; y[nf:nt]; }
tmean(x,2)
tmean = function (x,k) { y<-sort(x); nf<-k+1; nt<-length(x)-k; y[nf:nt]; }
tmean(x,2)
tmean = function (x,k) { y<-sort(x); nf<-k+1; nt<-length[x]-k; mean(y[nf:nt]); }
tmean(x,2)
tmean = function (x,k) { y<-sort(x); nf<-k+1; nt<-length(x)-k; mean(y[nf:nt]); }
tmean(x,2)
tmean(1:18,2)
tmean(1:18,4)
tmean(1:18,3)
tmean = function (x,k) { y<-sort(x); mean(y[k+1:length(x)-k]); }
tmean(1:18,3)
tmean(1:18,5)
tmean(x,2)
tmean = function (x,k) { y<-sort(x); y[k+1:length(x)-k]; }
tmean(x,2)
tmean = function (x,k) { y<-sort(x); y[k+1:length(y)-k]; }
tmean(x,2)
tmean = function (x,k) { y<-sort(x); y[(k+1):(length(y)-k)]; }
tmean(x,2)
tmean = function (x,k) { y<-sort(x); mean(y[(k+1):(length(y)-k)]); }
tmean(x,2)
tmean = function (x,k) { mean(x[(k+1):(length(x)-k)]); }
tmean(x,2)
tmean = function (x,k) { mean(sort(x)[(k+1):(length(x)-k)]); }
tmean(x,2)
q()
